<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2000, 2025, Oracle and/or its affiliates.
  ~
  ~ Licensed under the Universal Permissive License v 1.0 as shown at
  ~ https://oss.oracle.com/licenses/upl.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.oracle.coherence.ce.tests</groupId>
    <artifactId>coherence-distribution-tests</artifactId>
    <version>${revision}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>topics-compatibility</artifactId>
  <name>Coherence Topics Backward Compatibility Tests</name>

  <properties>
    <!--
    This is the earlier version to verify topics is compatible with.
    This must be the same major version as the version in this build (The value in ${revision}).
    Typically, this will be patch zero of the ${revision} version.
    For 22.06 though this is patch 8 as earlier versions are not compatible.
    -->
    <coherence.compatibility.version>22.06.8</coherence.compatibility.version>
    <test.extend.jdk>${env.JAVA_HOME}</test.extend.jdk>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence</artifactId>
      <version>${coherence.compatibility.version}</version>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-testing-support</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>${coherence.group.id}</groupId>
          <artifactId>coherence-bedrock-testing-support</artifactId>
        </exclusion>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-bedrock-testing-support</artifactId>
      <version>${coherence.compatibility.version}</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.reactivex.rxjava3</groupId>
      <artifactId>rxjava</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!--
      The copy-dependencies plugin is used to copy the coherence.jar built by the
      current project (i.e. the current version) into the target/lib folder for
      each submodule. This coherence.jar is then used on the classpath of the
      storage members started by the compatibility tests.
       -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>get-current-version-of-coherence</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${coherence.group.id}</groupId>
                  <artifactId>coherence</artifactId>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/lib/current</outputDirectory>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
          <execution>
            <id>get-previous-version-of-coherence</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${coherence.group.id}</groupId>
                  <artifactId>coherence</artifactId>
                  <version>${coherence.compatibility.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>${coherence.group.id}</groupId>
                  <artifactId>coherence-bedrock-testing-support</artifactId>
                  <version>${coherence.compatibility.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/lib/previous</outputDirectory>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- maven-failsafe-plugin runs integration tests with a different jdk -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <reuseForks>false</reuseForks>
          <jvm>${test.extend.jdk}/bin/java</jvm>
          <systemPropertyVariables>
            <coherence.compatibility.version>${coherence.compatibility.version}</coherence.compatibility.version>
            <server.java.home>${env.JAVA_HOME}</server.java.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <coherence.compatibility.version>${coherence.compatibility.version}</coherence.compatibility.version>
            <server.java.home>${env.JAVA_HOME}</server.java.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <id>default-install</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>test-jdk23</id>
        <activation>
          <jdk>[23,)</jdk>
        </activation>
      <properties>
        <maven.test.skip>true</maven.test.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>security-manager</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>test.security.enabled</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>test-jdk16</id>
      <properties>
        <surefire.argLine>-Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${project.build.directory} -XX:+ExitOnOutOfMemoryError -Dfile.encoding=UTF-8 --add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-exports java.management/sun.management=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED</surefire.argLine>
        <failsafe.argLine>-Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${project.build.directory} -XX:+ExitOnOutOfMemoryError -Dfile.encoding=UTF-8 --add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-exports java.management/sun.management=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED</failsafe.argLine>
      </properties>
    </profile>

    <profile>
      <id>code-coverage</id>
      <activation>
        <property>
          <name>code.coverage.enabled</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
